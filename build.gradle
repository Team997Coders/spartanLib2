plugins {
	id "java"
	id "edu.wpi.first.GradleRIO" version "2023.4.3"
	id 'com.diffplug.spotless' version '6.11.0'
	id 'maven-publish'
	id 'signing'
}

def VERSION = "1.4.1"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17


java {
	withJavadocJar()

	registerFeature('revLibSupport') {
		usingSourceSet(sourceSets.main)
	}

	registerFeature('kauaiLabsSupport') {
		usingSourceSet(sourceSets.main)
	}
}

dependencies {
	implementation wpi.java.deps.wpilib()
	implementation wpi.java.vendor.java()

	implementation group: 'edu.wpi.first.wpilibNewCommands', name: 'wpilibNewCommands-java', version: '2023.4.3'

	revLibSupportImplementation group : 'com.revrobotics.frc', name: "REVLib-java", version: '2023.1.3'

	kauaiLabsSupportImplementation group: 'com.kauailabs.navx.frc', name: "navx-frc-java", version: '2023.0.3'
	// For updating this: also need to change repository URL

	implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

	testImplementation 'junit:junit:4.13.2'
}

if (hasProperty('buildScan')) {
	buildScan {
		termsOfServiceUrl = 'https://gradle.com/terms-of-service'
		termsOfServiceAgree = 'yes'
	}
}

test {
	testLogging.showStandardStreams = true
}

spotless {
	ratchetFrom('origin/dev')
	format 'misc', {
		target fileTree(rootDir) {
			include '*.gradle', '.gitignore'
			exclude 'LICENSE.md'
		}

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		googleJavaFormat('1.15.0').aosp().reflowLongStrings()
		formatAnnotations()

		licenseHeaderFile 'licenseHeader.txt'
	}
}
compileJava.dependsOn spotlessApply

javadoc {
	if(JavaVersion.current().isJava9Compatible()) {
		options.addBooleanOption('html5', true)
	}

	options.memberLevel = JavadocMemberLevel.PUBLIC
}

tasks.register('updateGitHooks', Copy) {
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into { new File(rootProject.rootDir, '.git/hooks') }
	fileMode 0775
}
compileJava.dependsOn updateGitHooks

tasks.register('sourceJar', Jar) {
	archiveClassifier.set("sources")
	from sourceSets.main.allJava
}

publishToMavenLocal.dependsOn build
publish.dependsOn build

repositories {
	mavenLocal()
	mavenCentral()

	maven {
		url "https://maven.revrobotics.com/"
	}

	maven {
		url "https://dev.studica.com/maven/release/2023/"
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'org.chsrobotics.lib'
			artifactId 'spartanLib2'
			version VERSION

			from components.java

			pom {
				name = 'spartanLib2'
				description = 'FRC library for team 997. Provides common reusable components for interfacing with WPILib.'
				url = 'https://github.com/Team997Coders/spartanLib2'

				licenses {
					license {
						name = 'GPL-v3.0'
						url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
					}
				}

				organization {
					name = 'Team997Coders'
					url = 'https://www.chsrobotics.org'
				}

				developers {
					developer {
						id = 'TandeJ'
						name = 'Thomas Anderson'
						email = 'tande92834@gmail.com'
					}
					developer {
						id = 'elliotnash'
						name = 'Elliot Nash'
						email = 'elliotnash@gmail.com'
					}
				}

				scm {
					connection = 'scm:git:https://github.com/Team997Coders/spartanLib2.git'
					developerConnection = 'scm:git:https://github.com/Team997Coders/spartanLib2.git'
					url = 'https://github.com/Team997Coders/spartanLib2'
				}
			}

			artifact(sourceJar) {
				classifier = 'sources'
			}
		}
	}
}
